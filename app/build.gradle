buildscript {
  repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'https://dl.bintray.com/drummer-aidan/maven' }
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:1.1.0'
    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
    classpath 'io.fabric.tools:gradle:1.+'
  }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
  jcenter()
  maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'android-apt'

android {
  compileSdkVersion 22
  buildToolsVersion '22.0.1'

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  packagingOptions {
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/notice.txt'
    exclude 'META-INF/license.txt'
    exclude 'LICENSE.txt'
  }

  signingConfigs {
    debug {
      storeFile file('debug.keystore')
    }

    release {
      storeFile file("moviewatchkey.keystore")
      storePassword "1nContr0lHomE"
      keyAlias "work"
      keyPassword "1nContr0lHomE"
    }
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.debug
      minifyEnabled true
      zipAlignEnabled true
      versionNameSuffix calculateVersionNameSuffix()
      proguardFiles fileTree(dir: 'proguard')
      applicationIdSuffix '.debug'
    }
    release {
      signingConfig signingConfigs.release
      minifyEnabled true
      zipAlignEnabled true
      versionNameSuffix calculateVersionNameSuffix()
      proguardFiles fileTree(dir: 'proguard')
    }
  }

  defaultConfig {
    applicationId "com.movie.watch"
    versionName '2.02'
    versionCode calculateVersionCode()
    minSdkVersion 11
    targetSdkVersion 22
    buildConfigField "String", "TWITTER_KEY", "\"uRfJltzoIjcBghU5bUkIUxrZP\""
    buildConfigField "String", "TWITTER_SECRET", "\"xqaIebedL77wwGE5vF0eNp6EwpMWIRi90TLDQfqUQv8OmU2p1h\""
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  productFlavors {
  }
}

apt {
  arguments {
    androidManifestFile variant.outputs[0].processResources.manifestFile
    resourcePackageName 'com.movie.watch'
  }
}

dependencies {
  apt "org.androidannotations:androidannotations:3.2"
  compile "org.androidannotations:androidannotations-api:3.2"
  compile 'com.android.support:support-v4:22.1'
  compile "com.android.support:appcompat-v7:22.0.+"
  compile "com.android.support:cardview-v7:21.0.+"
  compile 'com.google.android.gms:play-services:7.3.0'
  compile 'com.afollestad:material-dialogs:0.7.3.1'
  compile 'de.greenrobot:eventbus:2.4.0'
  compile 'com.squareup.retrofit:retrofit:1.9.0'
  compile 'com.mcxiaoke.volley:library:1.0.+@aar'
  compile 'com.jakewharton.hugo:hugo-runtime:1.2.1'
  compile 'joda-time:joda-time:2.7'
  compile 'org.joda:joda-convert:1.7'
  compile 'com.jpardogo.materialtabstrip:library:1.0.9'
  compile 'org.parceler:parceler-api:0.2.15'
  provided 'org.parceler:parceler:0.2.15'
  compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.3'
  compile('com.crashlytics.sdk.android:crashlytics:2.2.1@aar') {
    transitive = true;
  }
  compile('com.twitter.sdk.android:twitter:1.3.2@aar') {
    transitive = true;
  }
}

def calculateVersionNameSuffix() {
  def buildNumber = System.env.BUILD_NUMBER
  def buildTimestamp = new Date().format('HH:mm dd/MM/yy')
  return buildNumber ? " (Build #$buildNumber)" : " (Built $buildTimestamp)"
}

def calculateVersionCode() {
  def buildNumber = System.env.BUILD_NUMBER
  return buildNumber ? buildNumber.toInteger() : 1000000
}
